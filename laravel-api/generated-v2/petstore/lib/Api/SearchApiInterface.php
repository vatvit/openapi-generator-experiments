<?php declare(strict_types=1);

/**
 * PetStoreApiController
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace PetStoreApiV2\Server\Api;

use Illuminate\Http\JsonResponse;


interface SearchApiInterface {


    /**
     * Operation findPets
     * @param null | string[] $tags
     * @param null | int $limit
     * @return FindPetsResponseInterface
     */
    public function findPets(
            ?array $tags,
            ?int $limit,
    ): FindPetsResponseInterface;

}

// ============================================================================
// Response Interfaces - One per operation
// ============================================================================

/**
 * Response interface for findPets operation
 * All possible responses for this operation must implement this interface
 */
interface FindPetsResponseInterface
{
    /**
     * Convert this response to a JSON response
     * @return JsonResponse
     */
    public function toJsonResponse(): JsonResponse;
}


// ============================================================================
// Concrete Response Classes - One per response code per operation
// ============================================================================

/**
 * HTTP 200 response for findPets operation
 * pet response
 */
class FindPets200Response implements FindPetsResponseInterface
{
    public function __construct(
        /** @var Pet[] */
        private readonly array $data
    ) {}

    public function toJsonResponse(): JsonResponse
    {
        // Serialize array of models
        $serializer = new \Crell\Serde\SerdeCommon();
        $serialized = array_map(
            fn($item) => $serializer->serialize($item, 'array'),
            $this->data
        );
        return response()->json($serialized, 200);
    }
}

/**
 * HTTP 0 response for findPets operation
 * unexpected error
 */
class FindPets0Response implements FindPetsResponseInterface
{
    public function __construct(
        private readonly \PetStoreApiV2\Server\Models\Error $data
    ) {}

    public function toJsonResponse(): JsonResponse
    {
        // Serialize single model
        $serializer = new \Crell\Serde\SerdeCommon();
        $serialized = $serializer->serialize($this->data, 'array');
        return response()->json($serialized, 0);
    }
}


// ============================================================================
// Handler Interfaces - One per operation
// ============================================================================

/**
 * Handler interface for findPets operation
 * Implement this interface in your application to provide business logic
 */
interface FindPetsHandlerInterface
{
    /**
     * Handle findPets operation
     *
     * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
     *
     * @param string[] $tags tags to filter by
     * @param int $limit maximum number of results to return
     * @return FindPetsResponseInterface
     */
    public function handle(
        ?array $tags,
        ?int $limit
    ): FindPetsResponseInterface;
}

