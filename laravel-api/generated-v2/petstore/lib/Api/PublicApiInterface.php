<?php declare(strict_types=1);

/**
 * PetStoreApiController
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace PetStoreApiV2\Server\Api;

use Illuminate\Http\JsonResponse;


interface PublicApiInterface {


    /**
     * Operation findPetById
     * @param int $id
     * @return FindPetByIdResponseInterface
     */
    public function findPetById(
            int $id,
    ): FindPetByIdResponseInterface;

}

// ============================================================================
// Response Interfaces - One per operation
// ============================================================================

/**
 * Response interface for findPetById operation
 * All possible responses for this operation must implement this interface
 */
interface FindPetByIdResponseInterface
{
    /**
     * Convert this response to a JSON response
     * @return JsonResponse
     */
    public function toJsonResponse(): JsonResponse;
}


// ============================================================================
// Concrete Response Classes - One per response code per operation
// ============================================================================

/**
 * HTTP 200 response for findPetById operation
 * pet response
 */
class FindPetById200Response implements FindPetByIdResponseInterface
{
    public function __construct(
        private readonly \PetStoreApiV2\Server\Models\Pet $data
    ) {}

    public function toJsonResponse(): JsonResponse
    {
        // Serialize single model
        $serializer = new \Crell\Serde\SerdeCommon();
        $serialized = $serializer->serialize($this->data, 'array');
        return response()->json($serialized, 200);
    }
}

/**
 * HTTP 0 response for findPetById operation
 * unexpected error
 */
class FindPetById0Response implements FindPetByIdResponseInterface
{
    public function __construct(
        private readonly \PetStoreApiV2\Server\Models\Error $data
    ) {}

    public function toJsonResponse(): JsonResponse
    {
        // Serialize single model
        $serializer = new \Crell\Serde\SerdeCommon();
        $serialized = $serializer->serialize($this->data, 'array');
        return response()->json($serialized, 0);
    }
}


// ============================================================================
// Handler Interfaces - One per operation
// ============================================================================

/**
 * Handler interface for findPetById operation
 * Implement this interface in your application to provide business logic
 */
interface FindPetByIdHandlerInterface
{
    /**
     * Handle findPetById operation
     *
     * Returns a user based on a single ID, if the user does not have access to the pet
     *
     * @param int $id ID of pet to fetch
     * @return FindPetByIdResponseInterface
     */
    public function handle(
        int $id
    ): FindPetByIdResponseInterface;
}

