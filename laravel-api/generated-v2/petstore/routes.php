<?php declare(strict_types=1);

/**
 * PetStoreApiController
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */

/**
 * GENERATED API ROUTES
 *
 * This file is generated from OpenAPI specification.
 * Include this file from your Laravel routes/api.php within a Route::group.
 *
 * Controller name is defined in OpenAPI spec: info.title
 *
 * Routes will use middleware groups with 'api.middlewareGroup.' prefix if they are defined.
 * For example: 'api.middlewareGroup.findPets', 'api.middlewareGroup.addPet', etc.
 * Define these groups in bootstrap/app.php only when you need custom middleware for an operation.
 *
 * Usage in routes/api.php:
 * ```php
 * // Wrap generated routes in a group
 * Route::group(['prefix' => 'v2', 'middleware' => ['api']], function ($router) {
 *     require base_path('generated/server/routes.php');
 * });
 * ```
 *
 * MIDDLEWARE USAGE:
 *
 * Routes will automatically use middleware groups named 'api.middlewareGroup.{operationId}'
 * if they are defined in your application. Define middleware groups in bootstrap/app.php:
 *
 * ```php
 * ->withMiddleware(function (Middleware $middleware): void {
 *     // Define middleware groups for specific operations
 *     $middleware->group('api.middlewareGroup.findPets', [
 *         \App\Http\Middleware\CacheResponse::class,
 *     ]);
 *
 *     $middleware->group('api.middlewareGroup.addPet', [
 *         \App\Http\Middleware\ValidateOwnership::class,
 *         \App\Http\Middleware\LogCreation::class,
 *     ]);
 *
 *     $middleware->group('api.middlewareGroup.deletePet', [
 *         \App\Http\Middleware\RequireAdmin::class,
 *     ]);
 * })
 * ```
 *
 * Routes will only have middleware attached if their corresponding group is defined.
 * Operations without defined middleware groups will have no middleware applied.
 */

// Use $router variable passed from Route::group closure
// This file expects $router to be available from the including context

/**
 * DELETE /pets/{id}
 * 
 * deletes a single pet based on the ID supplied
 */
$route = $router->DELETE('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'deletePet'])
    ->name('api.deletePet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.deletePet')) {
    $route->middleware('api.middlewareGroup.deletePet');
}

/**
 * GET /pets
 * 
 * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
$route = $router->GET('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPets'])
    ->name('api.findPets');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPets')) {
    $route->middleware('api.middlewareGroup.findPets');
}

/**
 * POST /pets
 * 
 * Creates a new pet in the store. Duplicates are allowed
 */
$route = $router->POST('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'addPet'])
    ->name('api.addPet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.addPet')) {
    $route->middleware('api.middlewareGroup.addPet');
}

/**
 * GET /pets/{id}
 * 
 * Returns a user based on a single ID, if the user does not have access to the pet
 */
$route = $router->GET('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPetById'])
    ->name('api.findPetById');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPetById')) {
    $route->middleware('api.middlewareGroup.findPetById');
}

/**
 * GET /pets
 * 
 * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
$route = $router->GET('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPets'])
    ->name('api.findPets');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPets')) {
    $route->middleware('api.middlewareGroup.findPets');
}

/**
 * POST /pets
 * 
 * Creates a new pet in the store. Duplicates are allowed
 */
$route = $router->POST('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'addPet'])
    ->name('api.addPet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.addPet')) {
    $route->middleware('api.middlewareGroup.addPet');
}

/**
 * DELETE /pets/{id}
 * 
 * deletes a single pet based on the ID supplied
 */
$route = $router->DELETE('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'deletePet'])
    ->name('api.deletePet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.deletePet')) {
    $route->middleware('api.middlewareGroup.deletePet');
}

/**
 * POST /pets
 * 
 * Creates a new pet in the store. Duplicates are allowed
 */
$route = $router->POST('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'addPet'])
    ->name('api.addPet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.addPet')) {
    $route->middleware('api.middlewareGroup.addPet');
}

/**
 * DELETE /pets/{id}
 * 
 * deletes a single pet based on the ID supplied
 */
$route = $router->DELETE('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'deletePet'])
    ->name('api.deletePet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.deletePet')) {
    $route->middleware('api.middlewareGroup.deletePet');
}

/**
 * GET /pets/{id}
 * 
 * Returns a user based on a single ID, if the user does not have access to the pet
 */
$route = $router->GET('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPetById'])
    ->name('api.findPetById');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPetById')) {
    $route->middleware('api.middlewareGroup.findPetById');
}

/**
 * GET /pets
 * 
 * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
$route = $router->GET('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPets'])
    ->name('api.findPets');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPets')) {
    $route->middleware('api.middlewareGroup.findPets');
}

/**
 * GET /pets/{id}
 * 
 * Returns a user based on a single ID, if the user does not have access to the pet
 */
$route = $router->GET('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPetById'])
    ->name('api.findPetById');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPetById')) {
    $route->middleware('api.middlewareGroup.findPetById');
}

/**
 * GET /pets
 * 
 * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
$route = $router->GET('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPets'])
    ->name('api.findPets');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPets')) {
    $route->middleware('api.middlewareGroup.findPets');
}

/**
 * GET /pets/{id}
 * 
 * Returns a user based on a single ID, if the user does not have access to the pet
 */
$route = $router->GET('/v2/pets/{id}', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPetById'])
    ->name('api.findPetById');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPetById')) {
    $route->middleware('api.middlewareGroup.findPetById');
}

/**
 * GET /pets
 * 
 * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
$route = $router->GET('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'findPets'])
    ->name('api.findPets');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.findPets')) {
    $route->middleware('api.middlewareGroup.findPets');
}

/**
 * POST /pets
 * 
 * Creates a new pet in the store. Duplicates are allowed
 */
$route = $router->POST('/v2/pets', [PetStoreApiV2\Server\Http\Controllers\DefaultController::class, 'addPet'])
    ->name('api.addPet');

// No security required - public endpoint
// Middleware can still be attached if group is defined
if ($router->hasMiddlewareGroup('api.middlewareGroup.addPet')) {
    $route->middleware('api.middlewareGroup.addPet');
}


// ============================================================================
// Security Middleware Validation (Auto-generated)
// ============================================================================
// Validates that all required security middleware is properly configured
// Only runs when APP_DEBUG=true (development mode)
// ============================================================================

if (config('app.debug', false)) {
    // Validate security middleware configuration
    if (class_exists(PetStoreApiV2\Server\Security\SecurityValidator::class)) {
        try {
            PetStoreApiV2\Server\Security\SecurityValidator::validateMiddleware($router);
        } catch (\RuntimeException $e) {
            // Log validation errors but don't break the application
            error_log("Security middleware validation failed for PetStoreApiV2\Server:");
            error_log($e->getMessage());

            // In debug mode, you might want to throw the exception to catch issues early
            // Uncomment the line below to make validation failures fatal:
            // throw $e;
        }
    }
}
